import { Extension } from "./Extension";
import { Translation } from "./Translation";
import { Tax } from "./Price/Tax";
import { Manufacturer } from "./Manufacturer";
import { Price } from "./Price/Price";
import { Media } from "./Media";

export interface Product {
  extensions: Extension;
  translated: Translation;
  categoryTree: string[];
  propertyIds: string[];
  tax: Tax;
  manufacturer: Manufacturer;
  cover: {
    extensions: {
      foreignKeys: {
        apiAlias: string;
      };
    };
    _uniqueIdentifier: string;
    versionId: string;
    translated: Partial<Translation>;
    createdAt: string;
    updatedAt: string;
    productId: string;
    mediaId: string;
    position: number;
    media: Media;
    id: string;
    customFields: null;
    apiAlias: string;
  };
  cheapestPriceContainer: Price;
  calculatedCheapestPrice: Price;
  calculatedPrice: Price;
  _uniqueIdentifier: string;
  versionId: string;
  createdAt: string;
  updatedAt: string;
  parentId: string;
  childCount: number;
  taxId: string;
  manufacturerId: string;
  unitId: string;
  active: boolean;
  displayGroup: string;
  manufacturerNumber: string;
  ean: string;
  sales: number;
  productNumber: string;
  stock: number;
  availableStock: number;
  available: boolean;
  deliveryTimeId: string;
  deliveryTime: string;
  restockTime: string;
  isCloseout: boolean;
  purchaseSteps: number;
  maxPurchase: number;
  minPurchase: number;

  purchaseUnit: number;
  referenceUnit: number;
  shippingFree: boolean;
  markAsTopseller: string;

  weight: number;
  width: number;
  height: number;
  length: number;
  releaseDate: string;
  streamIds: string;
  optionIds: string;
  name: string;
  keywords: string;
  description: string;
  metaDescription: string;
  metaTitle: string;
  packUnit: string;
  packUnitPlural: string;
  mainVariantId: string;
  unit: string;
  parent: string;
  children: string;
  media: string;
  cmsPageId: string;
  cmsPage: string;
  translations: string;
  categories: string;
  properties: string;
  options: [];
  configuratorSettings: string;
  categoriesRo: string;
  coverId: string;
  blacklistIds: string;
  whitelistIds: string;
  categoryIds: string;
  productReviews: string;
  ratingAverage: string;
  mainCategories: string;
  seoUrls: string;
  crossSellings: string;
  canonicalProductId: string;
  canonicalProduct: string;
  streams: string;
  downloads: string;
  states: string;
  id: string;
  customFields: object;
  calculatedPrices: [];
  isNew: boolean;
  calculatedMaxPurchase: number;
  seoCategory: string;
  apiAlias: string;
  sortedProperties: string;
}
